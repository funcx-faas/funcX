name: CI/CD

on:
  push:
    branches:
      - "*"
    tags:
      - "*"
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
      - name: install requirements
        run: |
          python -m pip install -U pip setuptools wheel
          python -m pip install pre-commit tox
      - name: run pre-commit
        run: pre-commit run -a
      - name: mypy (sdk)
        run: |
          cd funcx_sdk
          tox -e mypy

  # ensure docs can build, imitating the RTD build as best we can
  check-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: "3.10"
      - name: build docs
        run: make docs

  safety-check-endpoint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
      - name: install requirements
        run: |
          python -m pip install './funcx_endpoint'
          python -m pip install safety
      - name: run safety check
        run: safety check

  test-sdk:
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
    name: "Test SDK on py${{ matrix.python-version }} x ${{ matrix.os }} "
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - run: python -m pip install -U pip setuptools
      - run: python -m pip install tox
      - name: run tests
        run: |
          cd funcx_sdk
          tox -e py

  test-endpoint:
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.7", "3.10"]
    runs-on: ${{ matrix.os }}
    name: "Test Endpoint on py${{ matrix.python-version }} x ${{ matrix.os }} "
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - run: python -m pip install -U pip setuptools
      - run: python -m pip install tox
      - name: run tests
        run: |
          cd funcx_endpoint
          tox -e py

  publish:
    # only trigger on pushes to the main repo (not forks, and not PRs)
    if: ${{ github.repository == 'funcx-faas/funcX' && github.event_name == 'push' }}
    needs:
      - lint
      - test-sdk
      - test-endpoint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ["3.7", "3.8", "3.9"]
    steps:
    - uses: actions/checkout@master
    - name: Extract tag name
      shell: bash
      run: echo "##[set-output name=imagetag;]$(echo ${GITHUB_REF##*/})"
      id: extract_tag_name

    - name: Build funcX-endpoint Image for selected python version
      uses: elgohr/Publish-Docker-Github-Action@master
      env:
        PYTHON_VERSION: ${{ matrix.python }}
      with:
        dockerfile: Dockerfile-endpoint
        name: funcx/kube-endpoint:${{ steps.extract_tag_name.outputs.imagetag }}-${{ matrix.python }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        buildargs: PYTHON_VERSION
