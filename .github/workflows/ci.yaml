name: CI/CD

on:
  push:
    branches:
      - "*"
    tags:
      - "*"
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
      - name: install pre-commit
        run: |
          python -m pip install -U pip setuptools wheel
          python -m pip install pre-commit
      - name: run pre-commit
        run: pre-commit run -a

  test-sdk:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: install requirements
        run: |
          python -m pip install -U pip setuptools wheel
          python -m pip install './funcx_sdk[test]'
          pip install safety
      - name: run safety check
        run: safety check

      # TODO: remove this test
      # This is the weakest test which does anything, checking that the client can
      # be imported. As soon as pytest is running again, remove this.
      - name: check importable
        run: python -c "from funcx.sdk.client import FuncXClient"
      # - name: run pytest
      #   run: |
      #     cd funcx_sdk
      #     pytest

  test-endpoint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: install requirements
        run: |
          python -m pip install -U pip setuptools wheel
          python -m pip install './funcx_endpoint[test]'
          pip install safety
      - name: run safety check
        run: safety check
      - name: run pytest
        run: |
          PYTHONPATH=funcx_endpoint python -m coverage run -m pytest funcx_endpoint/tests/funcx_endpoint

  publish:
    # only trigger on pushes to the main repo (not forks, and not PRs)
    if: ${{ github.repository == 'funcx-faas/funcX' && github.event_name == 'push' }}
    needs:
      - lint
      - test-sdk
      - test-endpoint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [ 3.6, 3.7, 3.8, 3.9 ]
    steps:
    - uses: actions/checkout@master
    - name: Extract tag name
      shell: bash
      run: echo "##[set-output name=imagetag;]$(echo ${GITHUB_REF##*/})"
      id: extract_tag_name

    - name: Build funcX-endpoint Image for selected python version
      uses: elgohr/Publish-Docker-Github-Action@master
      env:
        PYTHON_VERSION: ${{ matrix.python }}
      with:
        dockerfile: Dockerfile-endpoint
        name: funcx/kube-endpoint:${{ steps.extract_tag_name.outputs.imagetag }}-${{ matrix.python }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        buildargs: PYTHON_VERSION
