apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-endpoint-instance-config
  labels:
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app: {{ .Release.Name }}
data:
  config.py: |
    from funcx_endpoint.endpoint.utils.config import Config
    from funcx_endpoint.providers.kubernetes.kube import KubernetesProvider
    from funcx_endpoint.strategies import KubeSimpleStrategy

    config = Config(
        scaling_enabled=True,
        provider=KubernetesProvider(
            init_blocks={{ .Values.initBlocks }},
            min_blocks={{ .Values.minBlocks }},
            max_blocks={{ .Values.maxBlocks }},
            init_cpu= {{ .Values.initCPU }},
            max_cpu={{ .Values.maxCPU }},
            init_mem="{{ .Values.initMem }}",
            max_mem="{{ .Values.maxMem }}",
            image="{{ .Values.workerImage }}",
            worker_init='{{ .Values.workerInit }}',
            namespace='{{ .Values.workerNamespace }}'
        ),
        strategy=KubeSimpleStrategy(max_idletime=3600),
        max_workers_per_node={{ .Values.maxWorkersPerPod }},
        scheduler_mode='hard',
        heartbeat_period=15,
        heartbeat_threshold=200,
        working_dir='{{ .Values.workingDir }}',
        funcx_service_address="{{ .Values.funcXServiceAddress }}/v1",
        detach_endpoint=False,
        interchange_file_logger=False
    )

    # For now, visible_to must be a list of URNs for globus auth users or groups, e.g.:
    # urn:globus:auth:identity:{user_uuid}
    # urn:globus:groups:id:{group_uuid}
    meta = {
    "name": "default",
    "description": "",
    "organization": "",
    "department": "",
    "public": True,
    "visible_to": []
    }
